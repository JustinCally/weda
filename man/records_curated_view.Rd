% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/curated-views-transect.R, R/curated-views.R
\name{transect_records_curated_view}
\alias{transect_records_curated_view}
\alias{transect_curated_view}
\alias{transect_project_curated_view}
\alias{records_curated_view}
\alias{operation_curated_view}
\alias{project_curated_view}
\title{Curated views}
\usage{
transect_records_curated_view(con, return_data = FALSE)

transect_curated_view(con, return_data = FALSE)

transect_project_curated_view(con, return_data = FALSE)

records_curated_view(con, return_data = FALSE)

operation_curated_view(con, return_data = FALSE)

project_curated_view(con, return_data = FALSE)
}
\arguments{
\item{con}{database connection}

\item{return_data}{logical flag to return data (TRUE) or sql query (default is FALSE)}
}
\value{
sql or data.frame
}
\description{
Take raw records and return the most recently modified row for each record
}
\examples{
\dontrun{
con <- weda_connect(password = keyring::key_get(service = "ari-dev-weda-psql-01",
username = "psql_user"))
DBI::dbExecute(conn = con,
               paste(DBI::SQL("CREATE VIEW camtrap.curated_camtrap_records AS"),
               records_curated_view(con)))
DBI::dbExecute(conn = con,
               paste(DBI::SQL("CREATE VIEW camtrap.curated_camtrap_operation AS"),
               operation_curated_view(con)))
DBI::dbExecute(conn = con,
               paste(DBI::SQL("CREATE VIEW camtrap.curated_project_information AS"),
               project_curated_view(con)))
}
}
