% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mc-recordTable.R
\name{mcrecordTable}
\alias{mcrecordTable}
\title{Camera Trap Record Table for subset sites and using multiple cores}
\usage{
mcrecordTable(
  inDir,
  intermediateDir,
  includeStations,
  overwrite = FALSE,
  ...,
  cores = 1
)
}
\arguments{
\item{inDir}{character. Directory containing station directories. It must
either contain images in species subdirectories (e.g.
inDir/StationA/SpeciesA) or images with species metadata tags (without
species directories, e.g. inDir/StationA).}

\item{intermediateDir}{character. Directory path to store intermediate rds objects,
which are one rds (intermediate file) per station. This directory should not have stations,
data or files that are not intermediate files.}

\item{includeStations}{character. (OPTIONAL) Subset of stations to extract data for within a directory.
Can be useful if only wanting to extract data for a subset of sites within a directory. If no
argument is given function will default to all stations. Otherwise, provide a character vector of
station names (matching the subdirectory names in inDir).}

\item{overwrite}{Re-extract data for sites where an intermediate file already exists. The default (FALSE),
ensures data is not re-extracted for sites that already have intermediate files. Allowing you to
pick up where you left off for extractions that take a long time.}

\item{...}{Additional arguments passed to \code{\link[camtrapR:recordTable]{recordTable}}}

\item{cores}{Number of cores to use}
}
\value{
data.frame (same as \code{\link[camtrapR:recordTable]{recordTable}})
}
\description{
Camera Trap Record Table for subset sites and using multiple cores
}
\examples{
int.dir <- tempdir()
raw_camtrap_records <- mcrecordTable(inDir  = system.file("dummydata/images", package = "weda"),
                                    IDfrom = "metadata",
                                    cameraID = "directory",
                                    stationCol = "SiteID",
                                    camerasIndependent = TRUE,
                                    timeZone = Sys.timezone(location = TRUE),
                                    metadataSpeciesTag = "Species",
                                    removeDuplicateRecords = FALSE,
                                    returnFileNamesMissingTags = TRUE,
                                    includeStations = c("832", "2602"),
                                    intermediateDir = int.dir,
                                    overwrite = FALSE, cores = 1)
}
