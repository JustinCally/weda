[{"path":"https://justincally.github.io/weda/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 weda authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://justincally.github.io/weda/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"First Last. Author, maintainer.","code":""},{"path":"https://justincally.github.io/weda/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Last F (2023). weda: Package (One Line, Title Case). R package version 0.0.0.9000, https://justincally.github.io/weda/.","code":"@Manual{,   title = {weda: What the Package Does (One Line, Title Case)},   author = {First Last},   year = {2023},   note = {R package version 0.0.0.9000},   url = {https://justincally.github.io/weda/}, }"},{"path":"https://justincally.github.io/weda/index.html","id":"weda","dir":"","previous_headings":"","what":"What the Package Does (One Line, Title Case)","title":"What the Package Does (One Line, Title Case)","text":"weda (Wildlife Ecology Data Analytics) R package users Arthur Rylah Institute connect use Wildlife Ecology database. package demonstrations upload data database (e.g. camera trap data). Functions package allow users format data standardised way, assess data quality interact database.","code":""},{"path":"https://justincally.github.io/weda/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"What the Package Does (One Line, Title Case)","text":"can install development version weda GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"JustinCally/weda\")"},{"path":"https://justincally.github.io/weda/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"What the Package Does (One Line, Title Case)","text":"basic example shows solve common problem:","code":"library(weda) ## basic example code"},{"path":"https://justincally.github.io/weda/reference/camera_trap_dq.html","id":null,"dir":"Reference","previous_headings":"","what":"Assesses the data quality of camera trap records, operations and project information — camera_trap_dq","title":"Assesses the data quality of camera trap records, operations and project information — camera_trap_dq","text":"Assesses data quality camera trap records, operations project information","code":""},{"path":"https://justincally.github.io/weda/reference/camera_trap_dq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assesses the data quality of camera trap records, operations and project information — camera_trap_dq","text":"","code":"camera_trap_dq(camtrap_records, camtrap_operation, project_information)"},{"path":"https://justincally.github.io/weda/reference/camera_trap_dq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assesses the data quality of camera trap records, operations and project information — camera_trap_dq","text":"camtrap_records dataframe contains camera trap records (recordTable camtrapR) camtrap_operation dataframe contains information camera trap operation project_information dataframe contains information project","code":""},{"path":"https://justincally.github.io/weda/reference/camera_trap_dq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assesses the data quality of camera trap records, operations and project information — camera_trap_dq","text":"list pointblank objects","code":""},{"path":"https://justincally.github.io/weda/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://justincally.github.io/weda/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://justincally.github.io/weda/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://justincally.github.io/weda/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://justincally.github.io/weda/reference/prepare_camtrap_upload.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare camera trap data for upload to the database — prepare_camtrap_upload","title":"Prepare camera trap data for upload to the database — prepare_camtrap_upload","text":"function takes list agents prepares data upload database.","code":""},{"path":"https://justincally.github.io/weda/reference/prepare_camtrap_upload.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare camera trap data for upload to the database — prepare_camtrap_upload","text":"","code":"prepare_camtrap_upload(agent_list)"},{"path":"https://justincally.github.io/weda/reference/prepare_camtrap_upload.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare camera trap data for upload to the database — prepare_camtrap_upload","text":"agent_list list pointblank agents (directly camera_trap_dq())","code":""},{"path":"https://justincally.github.io/weda/reference/prepare_camtrap_upload.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare camera trap data for upload to the database — prepare_camtrap_upload","text":"list data frames","code":""},{"path":"https://justincally.github.io/weda/reference/prepare_camtrap_upload.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare camera trap data for upload to the database — prepare_camtrap_upload","text":"","code":"if (FALSE) { prepare_upload(agent_list) }"},{"path":"https://justincally.github.io/weda/reference/processed_SubStation_presence_absence.html","id":null,"dir":"Reference","previous_headings":"","what":"Presence/Absence Views — processed_SubStation_presence_absence","title":"Presence/Absence Views — processed_SubStation_presence_absence","text":"presence-absence data views site/substation (including daily presence-absence)","code":""},{"path":"https://justincally.github.io/weda/reference/processed_SubStation_presence_absence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Presence/Absence Views — processed_SubStation_presence_absence","text":"","code":"processed_SubStation_presence_absence(con, return_data = FALSE, daily = FALSE)"},{"path":"https://justincally.github.io/weda/reference/processed_SubStation_presence_absence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Presence/Absence Views — processed_SubStation_presence_absence","text":"con database connection return_data logical flag return data (TRUE) sql query (default FALSE) daily logical flag make query/data daily level (TRUE), per substation (FALSE)","code":""},{"path":"https://justincally.github.io/weda/reference/processed_SubStation_presence_absence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Presence/Absence Views — processed_SubStation_presence_absence","text":"sql data.frame","code":""},{"path":"https://justincally.github.io/weda/reference/processed_SubStation_presence_absence.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Presence/Absence Views — processed_SubStation_presence_absence","text":"","code":"if (FALSE) { DBI::dbExecute(conn = con_odbc,                paste(SQL(\"CREATE VIEW test.processed_site_substation_presence_absence AS\"),                processed_SubStation_presence_absence(con = con_odbc, return_data = FALSE))) }"},{"path":"https://justincally.github.io/weda/reference/records_curated_view.html","id":null,"dir":"Reference","previous_headings":"","what":"Curated views — records_curated_view","title":"Curated views — records_curated_view","text":"Take raw records return recently modified row record","code":""},{"path":"https://justincally.github.io/weda/reference/records_curated_view.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Curated views — records_curated_view","text":"","code":"records_curated_view(con, return_data = FALSE)  operation_curated_view(con, return_data = FALSE)  project_curated_view(con, return_data = FALSE)"},{"path":"https://justincally.github.io/weda/reference/records_curated_view.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Curated views — records_curated_view","text":"con database connection return_data logical flag return data (TRUE) sql query (default FALSE)","code":""},{"path":"https://justincally.github.io/weda/reference/records_curated_view.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Curated views — records_curated_view","text":"sql data.frame","code":""},{"path":"https://justincally.github.io/weda/reference/records_curated_view.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Curated views — records_curated_view","text":"","code":"if (FALSE) { DBI::dbExecute(conn = con_odbc,                paste(DBI::SQL(\"CREATE VIEW test.curated_camtrap_records AS\"),                records_curated_view(con_odbc))) DBI::dbExecute(conn = con_odbc,                paste(DBI::SQL(\"CREATE VIEW test.curated_camtrap_operation AS\"),                operation_curated_view(con_odbc))) DBI::dbExecute(conn = con_odbc,                paste(DBI::SQL(\"CREATE VIEW test.curated_project_information AS\"),                project_curated_view(con_odbc))) }"},{"path":"https://justincally.github.io/weda/reference/standardise_species_names.html","id":null,"dir":"Reference","previous_headings":"","what":"This function standardises species names in a dataframe — standardise_species_names","title":"This function standardises species names in a dataframe — standardise_species_names","text":"function standardises species names dataframe","code":""},{"path":"https://justincally.github.io/weda/reference/standardise_species_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function standardises species names in a dataframe — standardise_species_names","text":"","code":"standardise_species_names(   recordTable,   format = c(\"scientific\", \"common\"),   speciesCol = \"Species\" )"},{"path":"https://justincally.github.io/weda/reference/standardise_species_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function standardises species names in a dataframe — standardise_species_names","text":"recordTable dataframe containing species names format format species names dataframe speciesCol column name species names dataframe","code":""},{"path":"https://justincally.github.io/weda/reference/standardise_species_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function standardises species names in a dataframe — standardise_species_names","text":"dataframe standardised species names","code":""},{"path":"https://justincally.github.io/weda/reference/standardise_species_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"This function standardises species names in a dataframe — standardise_species_names","text":"","code":"if (FALSE) { standardise_species_names(recordTable = recordTable,                           format = \"scientific\",                           speciesCol = \"Species\")                           }"},{"path":"https://justincally.github.io/weda/reference/upload_camtrap_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Upload camera trap data to database — upload_camtrap_data","title":"Upload camera trap data to database — upload_camtrap_data","text":"Upload camera trap data database","code":""},{"path":"https://justincally.github.io/weda/reference/upload_camtrap_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upload camera trap data to database — upload_camtrap_data","text":"","code":"upload_camtrap_data(con, data_list, uploadername)"},{"path":"https://justincally.github.io/weda/reference/upload_camtrap_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upload camera trap data to database — upload_camtrap_data","text":"con postgresql connection ari-dev-weda-psql-01 data_list list camera trap records, operations project information (output prepare_camtrap_upload()) uploadername name person uploading data","code":""},{"path":"https://justincally.github.io/weda/reference/upload_camtrap_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upload camera trap data to database — upload_camtrap_data","text":"","code":"if (FALSE) { upload_camtrap_data(con = con_odbc, data_list = data_list, uploadername = \"Justin Cally\") }"},{"path":"https://justincally.github.io/weda/reference/vba_name_conversions.html","id":null,"dir":"Reference","previous_headings":"","what":"Name conversions between scientific and common names — vba_name_conversions","title":"Name conversions between scientific and common names — vba_name_conversions","text":"dataset containing scientific names common names taxa VBA","code":""},{"path":"https://justincally.github.io/weda/reference/vba_name_conversions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Name conversions between scientific and common names — vba_name_conversions","text":"","code":"data(vba_name_conversions)"},{"path":"https://justincally.github.io/weda/reference/vba_name_conversions.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Name conversions between scientific and common names — vba_name_conversions","text":"data frame 38,587 rows 2 variables","code":""},{"path":"https://justincally.github.io/weda/reference/vba_name_conversions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Name conversions between scientific and common names — vba_name_conversions","text":"scientific_name. scientific name VBA common_name. common name VBA","code":""},{"path":"https://justincally.github.io/weda/news/index.html","id":"weda-0009000","dir":"Changelog","previous_headings":"","what":"weda 0.0.0.9000","title":"weda 0.0.0.9000","text":"Created package following functionality:","code":""}]
